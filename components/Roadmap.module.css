.roadmapWrapper {
  position: relative;
  width: 100%;
  min-height: 100vh;
}

.roadmapContainer {
  position: relative;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  padding: var(--spacing-8) var(--spacing-4);
  transition: all var(--animation-duration-normal) ease;
}

.pathSvgVertical {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 100px;
  height: 100%;
  z-index: var(--z-content-low);
  min-height: 100vh;
}

.pathTrail {
  stroke-dasharray: 2000;
  stroke-dashoffset: 2000;
  animation: drawPath 8s ease-in-out forwards;
}

.pathNode {
  animation: pathNodeGrow 0.6s ease-out forwards;
  animation-delay: calc(var(--index, 0) * 0.5s + 2s);
  transform: scale(0);
  transform-origin: center;
}

@keyframes drawPath {
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes pathNodeGrow {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  80% {
    transform: scale(1.2);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0.3;
  }
}

.nodesWrapper {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-16);
  z-index: var(--z-content);
  padding: var(--spacing-8) 0;
}

.nodeGroup {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-6);
  width: 100%;
  transition: all var(--animation-duration-normal) ease;
}

.node {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background-color: var(--node-default-bg);
  border: 3px solid var(--node-default-border);
  box-shadow: var(--shadow-md);
  cursor: pointer;
  transition: all var(--animation-duration-normal) ease;
  transform: scale(0);
  opacity: 0;
  margin-left: 0;
}

.node.nodeRightAligned {
  margin-left: auto;
  margin-right: 0;
}

.node.sprout {
  transform: scale(1);
  opacity: 1;
  animation: sproutBounce 0.8s cubic-bezier(0.34, 1.56, 0.64, 1) forwards,
    leafSway 4s ease-in-out infinite alternate;
  animation-delay: inherit;
}

.node:hover {
  transform: scale(1.1);
  border-color: var(--primary);
  box-shadow: var(--shadow-lg);
  animation-play-state: paused;
}

.node.nodeActive {
  border-color: var(--primary);
  box-shadow: var(--shadow-focus);
  background: var(--node-complete-gradient);
}

.node.nodeExpanded {
  border-color: var(--secondary);
  box-shadow: 0 0 25px var(--secondary);
}

.node:active .ecoPulse,
.node.nodeActive .ecoPulse {
  transform: scale(2.5);
  opacity: 0;
  transition: transform 1s ease-out, opacity 1.2s ease-out;
}

.nodeIcon {
  color: var(--primary);
  transition: color var(--animation-duration-normal) ease;
  z-index: 1;
}

.node:hover .nodeIcon,
.node.nodeActive .nodeIcon {
  color: var(--primary-foreground);
}

.nodeLabel {
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  margin-top: var(--spacing-2);
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--foreground);
  white-space: nowrap;
  background: var(--background);
  padding: var(--spacing-1) var(--spacing-2);
  border-radius: var(--radius);
  box-shadow: var(--shadow);
  opacity: 0;
  transform: translateX(-50%) translateY(10px);
  transition: all var(--animation-duration-normal) ease;
}

.node.sprout .nodeLabel {
  opacity: 1;
  transform: translateX(-50%) translateY(0);
  animation-delay: calc(var(--animation-delay, 0ms) + 400ms);
}

.branchConnector {
  position: absolute;
  width: 60px;
  height: 3px;
  background: var(--path-color);
  top: 50%;
  left: 50%;
  transform-origin: left center;
  opacity: 0;
  transition: all var(--animation-duration-normal) ease;
}

.nodeRightAligned .branchConnector {
  transform: translateX(-100%) translateY(-50%) scaleX(-1);
  transform-origin: right center;
}

.node.sprout .branchConnector {
  opacity: 1;
  animation: branchGrow 0.6s ease-out forwards;
  animation-delay: calc(var(--animation-delay, 0ms) + 200ms);
}

@keyframes branchGrow {
  from {
    transform: scaleX(0) translateY(-50%);
  }
  to {
    transform: scaleX(1) translateY(-50%);
  }
}

.nodeRightAligned.sprout .branchConnector {
  animation: branchGrowRight 0.6s ease-out forwards;
  animation-delay: calc(var(--animation-delay, 0ms) + 200ms);
}

@keyframes branchGrowRight {
  from {
    transform: translateX(-100%) translateY(-50%) scaleX(0);
  }
  to {
    transform: translateX(-100%) translateY(-50%) scaleX(1);
  }
}

.ecoPulse {
  position: absolute;
  top: -8px;
  left: -8px;
  right: -8px;
  bottom: -8px;
  border-radius: 50%;
  background-color: var(--eco-pulse-color);
  transform: scale(0);
  opacity: 1;
  pointer-events: none;
}

.co2Badge {
  position: absolute;
  top: -10px;
  right: -10px;
  background: var(--success);
  color: var(--success-foreground);
  border-radius: var(--radius-full);
  padding: 3px 8px;
  font-size: 0.7rem;
  font-weight: 600;
  white-space: nowrap;
  box-shadow: var(--shadow);
  transform: scale(0);
  animation: badgePop 0.5s ease-out forwards;
  animation-delay: calc(var(--animation-delay, 0ms) + 500ms);
}

@keyframes badgePop {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  80% {
    transform: scale(1.1);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.subNodesContainer {
  position: relative;
  display: flex;
  gap: var(--spacing-3);
  flex-wrap: wrap;
  justify-content: center;
  opacity: 0;
  transform: translateY(-30px);
  max-height: 0;
  overflow: hidden;
  transition: all var(--animation-duration-slow) ease;
}

.subNodesContainer.subNodesExpanded {
  opacity: 1;
  transform: translateY(0);
  max-height: 400px;
}

.subNodesRight {
  margin-left: var(--spacing-16);
  justify-content: flex-start;
}

.subNodesLeft {
  margin-right: var(--spacing-16);
  justify-content: flex-end;
}

.subNode {
  width: 50px;
  height: 50px;
  border-width: 2px;
  margin: 0;
}

.subNode .nodeIcon svg {
  width: 18px;
  height: 18px;
}

.subNode .co2Badge {
  font-size: 0.6rem;
  padding: 2px 6px;
  top: -8px;
  right: -8px;
}

.subNode .nodeLabel {
  font-size: 0.75rem;
  margin-top: var(--spacing-1);
}

.subNode .branchConnector {
  display: none;
}

.tooltipContent {
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
  font-weight: 500;
}

.tooltipCo2 {
  font-size: 0.8em;
  color: var(--success);
  font-weight: 600;
}



@keyframes sproutBounce {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  60% {
    transform: scale(1.1);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes leafSway {
  from {
    transform: rotate(-1deg) scale(1);
  }
  to {
    transform: rotate(1deg) scale(1);
  }
}

/* Mobile Styles */
@media (max-width: 767px) {
  .roadmapContainer {
    padding: var(--spacing-6) var(--spacing-4);
  }

  .nodesWrapper {
    gap: var(--spacing-12);
  }

  .node {
    width: 70px;
    height: 70px;
  }

  .node.nodeRightAligned {
    margin-left: 0;
    margin-right: 0;
  }

  .branchConnector {
    display: none;
  }

  .subNodesRight,
  .subNodesLeft {
    margin: 0;
    justify-content: center;
  }

  .subNodesContainer {
    gap: var(--spacing-2);
  }

  .subNode {
    width: 45px;
    height: 45px;
  }



  .pathSvgVertical {
    width: 60px;
  }
}

/* Large desktop adjustments */
@media (min-width: 1024px) {
  .roadmapContainer {
    max-width: 1000px;
  }
  
  .node {
    width: 90px;
    height: 90px;
  }

  .nodeLabel {
    font-size: 1rem;
  }

  .branchConnector {
    width: 80px;
  }

  .subNodesRight {
    margin-left: var(--spacing-24);
  }

  .subNodesLeft {
    margin-right: var(--spacing-24);
  }
}